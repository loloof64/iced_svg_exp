name: AppImage Release

on:
  workflow_call:

jobs:
  build:
    name: Build
    runs-on: Ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Restore Docker image cache
        id: docker-cache
        uses: actions/cache@v4
        with:
          path: /tmp/docker-cache
          key: docker-image-appimage-builder-v1

      - name: Load Docker image from cache (if exists)
        if: steps.docker-cache.outputs.cache-hit == 'true'
        run: |
          docker load -i /tmp/docker-cache/appimage-builder.tar

      - name: Pull Docker image if not cached
        if: steps.docker-cache.outputs.cache-hit != 'true'
        run: |
          docker pull appimagecrafters/appimage-builder:latest
          mkdir -p /tmp/docker-cache
          docker save appimagecrafters/appimage-builder:latest -o /tmp/docker-cache/appimage-builder.tar

      - name: Cache cargo registry + target
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-strict-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-strict-
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo build --release
      - name: Build AppImage using appimage-builder
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            appimagecrafters/appimage-builder:latest \
            appimage-builder \
            --recipe appimage/AppImageBuilder.yml --skip-test

      - name: Save build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ResizeFerris-${{ github.ref_name }}-x86_64.AppImage
          path: "./*.AppImage*"
